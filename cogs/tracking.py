import datetime

import discord
from discord import app_commands
from discord.app_commands import Choice
from discord.ext import commands

import autocompletes
import security
import templates
from bot import EsBot
from database import db
from database.online.features import is_date_valid


class TrackingCog(commands.GroupCog, name='tracking'):
    def __init__(self, bot: EsBot):
        self.bot = bot

    @app_commands.command(name='moderator', description='–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–µ–π—Å—Ç–≤–∏—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞')
    @app_commands.rename(moderator='–º–æ–¥–µ—Ä–∞—Ç–æ—Ä', date='–¥–∞—Ç–∞')
    @app_commands.describe(moderator='–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä, –¥–µ–π—Å—Ç–≤–∏—è –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å', date='–î–∞—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ dd.mm.YYYY')
    @app_commands.autocomplete(date=autocompletes.date)
    @security.restricted(security.PermissionLevel.GMD)
    async def moderator(self, interaction: discord.Interaction, moderator: discord.Member, date: str = None):
        if not date:
            date = datetime.datetime.now().strftime('%d.%m.%Y')
        if not is_date_valid(date):
            raise ValueError('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã. –§–æ—Ä–º–∞—Ç: dd.mm.YYYY.\n–ü—Ä–∏–º–µ—Ä: 07.07.2077')

        punishments = await db.actions.by_moderator(moderator.id, counting=True, date=datetime.datetime.strptime(date, '%d.%m.%Y'))
        online = await db.online.get_info(is_open=True, user_id=moderator.id, guild_id=interaction.guild.id, date=date)

        actions = {}

        for action in punishments:
            actions.setdefault(action.type, []).append(action)

        string_info = '\n„Éª '.join([f'{templates.action(action_type, short=True)}: `{len(acts)}`' for action_type, acts in sorted(actions.items(), key=lambda x: len(x[1]), reverse=True)])
        string_info = string_info or '–ù–µ—Ç –Ω–∞–∫–∞–∑–∞–Ω–∏–π'

        embed = discord.Embed(description=f'### üõ†Ô∏è –î–µ–π—Å—Ç–≤–∏—è {moderator.mention}', color=discord.Color.light_embed(), timestamp=discord.utils.utcnow())
        embed.add_field(name='–ù–æ—Ä–º–∞', value=f'`‚ò†Ô∏è` **{sum([len(v) for v in actions.values()])}** –Ω–∞–∫–∞–∑–∞–Ω–∏–π\n'
                                            f'`‚è±Ô∏è` **{templates.time(online.total_seconds)}** –≤ voice', inline=True)
        embed.add_field(name='–î–∞—Ç–∞', value=date, inline=True)
        embed.set_thumbnail(url='https://i.imgur.com/B1awIXx.png')
        embed.add_field(name=f'–ù–∞–∫–∞–∑–∞–Ω–∏—è', value='„Éª ' + string_info, inline=False)
        embed.set_footer(text="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞")

        await interaction.response.send_message(content=templates.embed_mentions(embed), embed=embed, ephemeral=True)

    @app_commands.command(name='week', description='–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∑–∞ –Ω–µ–¥–µ–ª—é')
    @app_commands.rename(moderator='–º–æ–¥–µ—Ä–∞—Ç–æ—Ä', week='–Ω–µ–¥–µ–ª—è')
    @app_commands.describe(moderator='–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä, –¥–µ–π—Å—Ç–≤–∏—è –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å', week='–ù–µ–¥–µ–ª—è –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å')
    @security.restricted(security.PermissionLevel.GMD)
    async def week(self, interaction: discord.Interaction, week: Choice[str], moderator: discord.Member = None):
        pass

async def setup(bot: EsBot):
    await bot.add_cog(TrackingCog(bot))
