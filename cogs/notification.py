import asyncio
import datetime
from typing import NamedTuple

import discord
from discord.ext import commands
from discord import app_commands

from buttons.links import ForumLink
from buttons import send_notification
import security
import templates
import validation
from bot import EsBot
from buttons.roles import UnderReviewIndicator
from database import db
from features import Pagination, find_channel_by_name
from info.roles import role_info, RoleInfo
from database.notifications import Notification as NotificationInfo


profile_places: dict[str, str] = {
    '–ù–∏–∫–Ω–µ–π–º': "XtOyFvm",
    '–ê–≤–∞—Ç–∞—Ä': 'E80Q7Sy',
    '¬´–û–±–æ –º–Ω–µ¬ª': 'YOdiSNd',
    '–ú–µ—Å—Ç–æ–∏–º–µ–Ω–∏–µ': "i0vaXBO",
    '–°—Ç–∞—Ç—É—Å': 'jzIiiP7',
    '–ë–∞–Ω–Ω–µ—Ä': '9rbUDfK',
    '–û—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ –∏–º—è –≤ –ø—Ä–æ—Ñ–∏–ª–µ': 'xyO9kJF',
    '–Æ–∑–µ—Ä–Ω–µ–π–º': 'uk57ZV5',
    '–¢–µ–≥': 'FaL3Bbq',
    '–ö–ª–∞–Ω—Ç–µ–≥': 'wN33Gnk'
}

class Notification(commands.Cog):
    def __init__(self, bot: EsBot):
        self.bot = bot
        self.db = db.notifications
    
    @app_commands.command(name='notify', description='–£–≤–µ–¥–æ–º–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ –Ω–∞—Ä—É—à–µ–Ω–∏–∏ –≤ –ø—Ä–æ—Ñ–∏–ª–µ.')
    @app_commands.rename(user='–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å', content='–º–µ—Å—Ç–æ')
    @app_commands.describe(user='–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –∫–æ—Ç–æ—Ä–æ–º—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ.', content='–ú–µ—Å—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è –≥–¥–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç –Ω–∞—Ä—É—à–µ–Ω–∏–µ.')
    @app_commands.choices(content=[app_commands.Choice(name=key, value=value) for key, value in profile_places.items()])
    @app_commands.default_permissions(manage_nicknames=True)
    @security.restricted(security.PermissionLevel.MD)
    async def notify(self, interaction: discord.Interaction, user: discord.Member, content: app_commands.Choice[str]):
        notification_channel = find_channel_by_name(interaction.guild, '–ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è', 'warning')
        if not notification_channel:
            raise ValueError('–ù–µ –Ω–∞–π–¥–µ–Ω –∫–∞–Ω–∞–ª –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.')
        
        add_e = [a for a in content.name if a.isalpha()][-1] == '–µ'
        need_lower = [a for a in content.name if a.isalpha()][-1].islower()

        member, user = await self.bot.getch_any(interaction.guild, user.id, interaction.user)
        
        duration = (10 if user.status.value == 'online' else 30) * 60

        embed = discord.Embed(
            title='üö® –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ!',
            description=(
                f'–£–≤–∞–∂–∞–µ–º—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –≤ –≤–∞—à–µ–º –ø—Ä–æ—Ñ–∏–ª–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∞—Ä—É—à–µ–Ω–∏–µ.\n'
                f'### –ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ –∏–∑–º–µ–Ω–∏—Ç–µ –≤–∞—à{"–µ" if add_e else ""} {content.name.lower() if need_lower else content.name}.\n'
                f'–í —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ –≤—ã –Ω–µ —Å–æ–≥–ª–∞—Å–Ω—ã —Å –¥–µ–π—Å—Ç–≤–∏—è–º–∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞, –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–¥–∞—Ç—å –∂–∞–ª–æ–±—É –Ω–∞ [—Ñ–æ—Ä—É–º –ø—Ä–æ–µ–∫—Ç–∞](https://forum.radmir.games).'
            ),
            color=discord.Color.red(),
            timestamp=discord.utils.utcnow()
        )

        embed.add_field(name='–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å', value=user.mention)
        embed.add_field(name='–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä', value=interaction.user.mention)
        embed.add_field(name='–í—Ä–µ–º—è –Ω–∞ —Å–º–µ–Ω—É', value=f'{duration // 60} –º–∏–Ω.')
        embed.add_field(name='–ß—Ç–æ –Ω—É–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å?', value=f'–í–∞–º –Ω—É–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å [{content.name}](https://imgur.com/{content.value}.png).\n–ï—Å–ª–∏ –≤—ã –Ω–µ –∑–Ω–∞–µ—Ç–µ —á—Ç–æ —ç—Ç–æ - –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω–∞–∑–≤–∞–Ω–∏–µ, –∏ –≤—ã —É–≤–∏–¥–∏—Ç–µ –ø—Ä–∏–º–µ—Ä.')
        embed.set_footer(text='–í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è')

        notification_message = await notification_channel.send(templates.embed_mentions(embed), embed=embed, view=ForumLink())

        await self.db.give(user=user.id, message_id=notification_message.id, guild=interaction.guild.id, moderator=interaction.user.id, notification_type=content.name, duration=duration)

        await interaction.response.send_message(f"## ü•≥ –£—Å–ø–µ—Ö!\n[–î–µ–π—Å—Ç–≤–∏–µ]({notification_message.jump_url}) —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ.\n\n"
                                        f"–ü–æ –ø—Ä–æ—à–µ—Å—Ç–≤–∏–∏ `{duration // 60} –º–∏–Ω.` –≤–∞–º –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–∏–¥—ë—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ.", ephemeral=True)

    @commands.Cog.listener()
    async def on_connect(self):
        self.db.set_callback(self.on_notification_expiration)
        await self.db.load()

    async def on_notification_expiration(self, notification: NotificationInfo):
        await self.bot.wait_until_ready()

        guild = self.bot.get_guild(notification.guild)
        moderator = await self.bot.getch_user(notification.moderator)
        if not moderator:
            return

        embed = discord.Embed(
            title='‚åõ –í—Ä–µ–º—è –≤—ã—à–ª–æ', color=discord.Color.light_embed(),
            description=f'–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤—ã—à–ª–æ –≤—Ä–µ–º—è –Ω–∞ —Å–º–µ–Ω—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.\n–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –∏–∑–º–µ–Ω–∏–ª –ª–∏ –æ–Ω –µ—ë, –∏ –µ—Å–ª–∏ –Ω–µ—Ç - —É–≤–µ–¥–æ–º–∏—Ç–µ, –∏ –≤—ã–¥–∞–π—Ç–µ –Ω–∞–∫–∞–∑–∞–Ω–∏–µ.',
            timestamp=discord.utils.utcnow()
        )

        embed.set_author(name=f'–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∏–∑: {guild.name}', icon_url=guild.icon.url)
        embed.add_field(name='–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å', value=templates.user(notification.user))
        embed.set_footer(text='–í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è')

        channel = find_channel_by_name(guild, "—á–∞—Ç-–º–æ–¥–µ—Ä–∞—Ü–∏–∏", "—á–∞—Ç-–º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤")
        try:
            await moderator.send(templates.embed_mentions(embed), embed=embed, view=send_notification(notification))
        except discord.Forbidden:
            await channel.send(
                f'{templates.embed_mentions(embed)}\n-# {moderator.mention}, '
                f'–æ–ø–æ–≤–µ—â–µ–Ω–∏—è –±—É–¥—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –≤ –õ–° –µ—Å–ª–∏ –≤—ã –æ—Ç–∫—Ä–æ–µ—Ç–µ –õ–° —Å –±–æ—Ç–æ–º.',
                embed=embed, view=send_notification(notification)
            )

async def setup(bot: EsBot):
    await bot.add_cog(Notification(bot))
